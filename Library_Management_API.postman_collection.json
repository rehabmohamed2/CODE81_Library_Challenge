{
	"info": {
		"_postman_id": "library-management-api",
		"name": "Library Management System API",
		"description": "Complete API collection for testing the Library Management System with role-based authentication and CRUD operations.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:9002/api",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"    pm.test('Login successful', function () {",
									"        pm.expect(response.token).to.exist;",
									"    });",
									"} else {",
									"    pm.test('Login failed', function () {",
									"        pm.expect.fail('Login should succeed');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with admin credentials to get JWT token"
					}
				},
				{
					"name": "Login - Librarian",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"librarian1\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with librarian credentials"
					}
				},
				{
					"name": "Login - Staff",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"staff1\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with staff credentials"
					}
				},
				{
					"name": "Register New User",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser\",\n    \"password\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user (default STAFF role)"
					}
				}
			],
			"description": "Authentication endpoints for login and registration"
		},
		{
			"name": "Books Management",
			"item": [
				{
					"name": "Get All Books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							]
						},
						"description": "Retrieve all books (requires authentication)"
					}
				},
				{
					"name": "Get Book by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"1"
							]
						},
						"description": "Get a specific book by ID"
					}
				},
				{
					"name": "Create New Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Book Title\",\n    \"isbn\": \"978-1234567890\",\n    \"publicationYear\": 2024,\n    \"edition\": \"1st Edition\",\n    \"language\": \"English\",\n    \"summary\": \"An exciting new book about programming\",\n    \"coverImageUrl\": \"https://example.com/cover.jpg\",\n    \"category\": {\n        \"id\": 1\n    },\n    \"publisher\": {\n        \"id\": 1\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							]
						},
						"description": "Create a new book (requires LIBRARIAN+ role)"
					}
				},
				{
					"name": "Update Book",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Book Title\",\n    \"isbn\": \"978-1234567890\",\n    \"publicationYear\": 2024,\n    \"edition\": \"2nd Edition\",\n    \"language\": \"English\",\n    \"summary\": \"Updated summary of the book\",\n    \"coverImageUrl\": \"https://example.com/updated-cover.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/books/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"1"
							]
						},
						"description": "Update an existing book"
					}
				},
				{
					"name": "Delete Book",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"1"
							]
						},
						"description": "Delete a book (requires LIBRARIAN+ role)"
					}
				}
			],
			"description": "CRUD operations for books management"
		},
		{
			"name": "Members Management",
			"item": [
				{
					"name": "Get All Members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						},
						"description": "Get all library members (requires LIBRARIAN+ role)"
					}
				},
				{
					"name": "Get Member by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"1"
							]
						},
						"description": "Get specific member details"
					}
				},
				{
					"name": "Create New Member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"555-1234\",\n    \"address\": \"123 Main St, City, State\",\n    \"membershipNumber\": \"MEM006\",\n    \"membershipStartDate\": \"2024-01-01\",\n    \"membershipExpiryDate\": \"2025-01-01\",\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						},
						"description": "Register a new library member"
					}
				},
				{
					"name": "Update Member",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"phone\": \"555-5678\",\n    \"address\": \"456 Oak St, City, State\",\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/members/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"1"
							]
						},
						"description": "Update member information"
					}
				},
				{
					"name": "Delete Member",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"1"
							]
						},
						"description": "Remove a member from the system"
					}
				}
			],
			"description": "Member management operations (LIBRARIAN+ access required)"
		},
		{
			"name": "User Management (Admin Only)",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Get all system users (ADMIN only)"
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get specific user details"
					}
				},
				{
					"name": "Create New User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newstaff\",\n    \"password\": \"password123\",\n    \"roleName\": \"STAFF\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new system user with role assignment"
					}
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"updateduser\",\n    \"roleName\": \"LIBRARIAN\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Update user details and role"
					}
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Delete a system user"
					}
				},
				{
					"name": "Get User Activities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1/activities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1",
								"activities"
							]
						},
						"description": "Get activity log for a specific user"
					}
				}
			],
			"description": "User management operations (ADMINISTRATOR access required)"
		},
		{
			"name": "Borrow Transactions",
			"item": [
				{
					"name": "Get All Transactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/borrow-transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrow-transactions"
							]
						},
						"description": "Get all borrow transactions"
					}
				},
				{
					"name": "Get Transaction by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/borrow-transactions/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrow-transactions",
								"1"
							]
						},
						"description": "Get specific transaction details"
					}
				},
				{
					"name": "Create Borrow Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"member\": {\n        \"id\": 1\n    },\n    \"book\": {\n        \"id\": 1\n    },\n    \"borrowDate\": \"2024-01-15\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/borrow-transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrow-transactions"
							]
						},
						"description": "Create a new borrow transaction (book checkout)"
					}
				},
				{
					"name": "Return Book (Update Transaction)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"returnDate\": \"2024-01-30\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/borrow-transactions/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrow-transactions",
								"1"
							]
						},
						"description": "Mark book as returned by setting return date"
					}
				},
				{
					"name": "Get Member's Transactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/borrow-transactions/member/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrow-transactions",
								"member",
								"1"
							]
						},
						"description": "Get borrowing history for a specific member"
					}
				}
			],
			"description": "Borrowing and return transaction management"
		},
		{
			"name": "Authors Management",
			"item": [
				{
					"name": "Get All Authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/authors",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authors"
							]
						},
						"description": "Get all authors"
					}
				},
				{
					"name": "Get Author by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/authors/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authors",
								"1"
							]
						},
						"description": "Get specific author details"
					}
				},
				{
					"name": "Create New Author",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Author\",\n    \"biography\": \"A talented writer with many bestsellers\",\n    \"nationality\": \"American\",\n    \"birthYear\": 1980\n}"
						},
						"url": {
							"raw": "{{base_url}}/authors",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authors"
							]
						},
						"description": "Add a new author (requires LIBRARIAN+ role)"
					}
				},
				{
					"name": "Update Author",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Author Name\",\n    \"biography\": \"Updated biography with more details\",\n    \"nationality\": \"British\",\n    \"birthYear\": 1975\n}"
						},
						"url": {
							"raw": "{{base_url}}/authors/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authors",
								"1"
							]
						},
						"description": "Update author information"
					}
				},
				{
					"name": "Delete Author",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/authors/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"authors",
								"1"
							]
						},
						"description": "Remove an author from the system"
					}
				}
			],
			"description": "Author management operations (LIBRARIAN+ access required)"
		},
		{
			"name": "Publishers Management",
			"item": [
				{
					"name": "Get All Publishers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/publishers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"publishers"
							]
						},
						"description": "Get all publishers"
					}
				},
				{
					"name": "Get Publisher by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/publishers/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"publishers",
								"1"
							]
						},
						"description": "Get specific publisher details"
					}
				},
				{
					"name": "Create New Publisher",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Publishing House\",\n    \"address\": \"123 Publishing St, New York, NY\",\n    \"website\": \"www.newpublisher.com\",\n    \"contactEmail\": \"contact@newpublisher.com\",\n    \"establishedYear\": 2020\n}"
						},
						"url": {
							"raw": "{{base_url}}/publishers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"publishers"
							]
						},
						"description": "Add a new publisher (requires LIBRARIAN+ role)"
					}
				},
				{
					"name": "Update Publisher",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Publisher Name\",\n    \"address\": \"456 Updated St, Boston, MA\",\n    \"website\": \"www.updatedpublisher.com\",\n    \"contactEmail\": \"info@updatedpublisher.com\",\n    \"establishedYear\": 2015\n}"
						},
						"url": {
							"raw": "{{base_url}}/publishers/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"publishers",
								"1"
							]
						},
						"description": "Update publisher information"
					}
				},
				{
					"name": "Delete Publisher",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/publishers/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"publishers",
								"1"
							]
						},
						"description": "Remove a publisher from the system"
					}
				}
			],
			"description": "Publisher management operations (LIBRARIAN+ access required)"
		},
		{
			"name": "Categories Management",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Get all book categories"
					}
				},
				{
					"name": "Get Category by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							]
						},
						"description": "Get specific category details"
					}
				},
				{
					"name": "Create New Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Programming\",\n    \"description\": \"Books about software development and programming languages\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Add a new category (requires LIBRARIAN+ role)"
					}
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Computer Science\",\n    \"description\": \"Comprehensive books on computer science and software engineering\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							]
						},
						"description": "Update category information"
					}
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							]
						},
						"description": "Remove a category from the system"
					}
				}
			],
			"description": "Category management operations (LIBRARIAN+ access required)"
		}
	]
}